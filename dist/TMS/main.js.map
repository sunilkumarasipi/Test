{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Services/authentication.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/helpers/auth-guard.ts","./src/app/helpers/date-formatter.ts","./src/app/helpers/error-interceptor.ts","./src/app/helpers/fake-backend.ts","./src/app/helpers/jwt-interceptor.ts","./src/app/helpers/utility-functions.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../Models/user';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  login(username, password) {\n\n    //debugger;\n    return this.http.post<any>(`/user/authenticate`, { username, password })\n      .pipe(map(user => {\n        console.log(user);\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout() {\n    localStorage.removeItem(\"currentUser\");\n    this.currentUserSubject.next(null);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './helpers/auth-guard';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    canActivate: [AuthGuard], \n    loadChildren: () => import('./home/home.module').then(m => m.HomeModule)\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from './Models/user';\nimport { AuthenticationService } from './Services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  currentUser: User;\n\n  constructor(\n      private router: Router,\n      private authenticationService: AuthenticationService\n  ) {\n      this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n      this.authenticationService.logout();\n      this.router.navigate(['/login']);\n  }\n}\n","<!-- nav -->\r\n<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\"> -->\r\n    <!-- <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\r\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\r\n\r\n        <div  class=\"topnav-right\"><label class=\"text-primary\">Welcome {{currentUser.firstName}}</label> </div>\r\n    </div> -->\r\n    <div class=\"topnav\" *ngIf=\"currentUser\">\r\n        <a class=\"active\" routerLink=\"/home\">Home</a>\r\n         <a routerLink=\"/home/school\">School</a>\r\n        <a routerLink=\"/home/student\">Student</a>\r\n        <div class=\"topnav-right\">\r\n            <a>Welcome {{currentUser.fullName}}</a>\r\n          <a (click)=\"logout()\">Logout</a>\r\n        </div>\r\n      </div>\r\n   \r\n<!-- </nav> -->\r\n\r\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"!currentUser\">\r\n    <div class=\"navbar-nav\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\">About</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Contact</a>\r\n    </div>\r\n</nav>\r\n\r\n<!-- main app container -->\r\n<div class=\"jumbotron\">\r\n    <div class=\"container\">\r\n        <!-- <div class=\"row\"> -->\r\n            <!-- <div class=\"col-sm-6 offset-sm-3\"> -->\r\n                <!-- <alert></alert> -->\r\n                <router-outlet></router-outlet>\r\n            <!-- </div> -->\r\n        <!-- </div> -->\r\n    </div>\r\n</div>\r\n\r\n<!-- credits -->\r\n<div class=\"text-center\">\r\n    <!-- <p>\r\n        <a href=\"https://jasonwatmore.com/post/2019/06/10/angular-8-user-registration-and-login-example-tutorial\" target=\"_top\">Angular 8 - User Registration and Login Example & Tutorial</a>\r\n    </p>\r\n    <p>\r\n        <a href=\"http://jasonwatmore.com\" target=\"_top\">JasonWatmore.com</a>\r\n    </p> -->\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n//import { AuthenticationService } from './Services/authentication.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './helpers/jwt-interceptor';\nimport { ErrorInterceptor } from './helpers/error-interceptor';\nimport { fakeBackendProvider } from './helpers/fake-backend';\nimport { UserService } from './Services/user.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { NgbdDatepickerPopup } from '../app/helpers/date-picker/datepicker-popup';\nimport { NgbDateCustomParserFormatter } from \"./helpers/date-formatter\";\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\n//import { CommonPagingComponent } from './helpers/common-paging/common-paging.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n//import { CommonPagingComponent } from './helpers/common-paging/common-paging.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    //CommonPagingComponent,\n    //CommonPagingComponent,\n    //NgbdDatepickerPopup\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgMultiSelectDropDownModule.forRoot()\n    //NgbModule\n  ],\n  providers: [\n    //ReactiveFormsModule,\n    //AuthenticationService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: NgbDateParserFormatter, useClass: NgbDateCustomParserFormatter },\n    fakeBackendProvider],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../Services/authentication.service';\n\n@Injectable({providedIn: 'root'})\n\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser=this.authenticationService.currentUserValue;\n        //return true;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n        this.router.navigate(['login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class NgbDateCustomParserFormatter extends NgbDateParserFormatter {\r\n  parse(value: string): NgbDateStruct {\r\n    if (value) {\r\n      const dateParts = value.trim().split(\"/\");\r\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n        return { day: toInteger(dateParts[0]), month: null, year: null };\r\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n        return {\r\n          day: toInteger(dateParts[0]),\r\n          month: toInteger(dateParts[1]),\r\n          year: null\r\n        };\r\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n        return {\r\n          day: toInteger(dateParts[0]),\r\n          month: toInteger(dateParts[1]),\r\n          year: toInteger(dateParts[2])\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  format(date: NgbDateStruct): string {\r\n    return date\r\n      ? `${isNumber(date.day) ? padNumber(date.day) : \"\"}/${isNumber(date.month) ? padNumber(date.month) : \"\"}/${\r\n          date.year\r\n        }`\r\n      : \"\";\r\n  }\r\n}\r\nexport function toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nexport function padNumber(value: number) {\r\n  if (isNumber(value)) {\r\n    return `0${value}`.slice(-2);\r\n  } else {\r\n    return \"\";\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService  } from \"../Services/authentication.service\";\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\nconstructor(private authenticationService: AuthenticationService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler, HttpResponse, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, mergeMap, materialize, delay, dematerialize } from 'rxjs/operators';\nimport { AuthenticationService } from \"../Services/authentication.service\";\nimport { environment } from \"../../environments/environment\";\nimport { User } from '../Models/user';\nimport { formatDate } from '@angular/common';\nimport { Utility } from \"./utility-functions\";\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    baseUrl: string = environment.baseApiUrl;\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const { url, method, headers, body } = request;\n        let newReqUrl = this.baseUrl + request.url;\n        const newBody = body;\n        switch (true) {\n            case (method == \"POST\" && !url.endsWith('/user/authenticate')):\n                newBody.insBy = this.getUser().userId;\n                    newBody.insDate = Utility.getCurrentDateTime();\n                    newBody.delStatus = \"N\";\n                    break;\n\n            case (method == \"PUT\"):\n                newBody.modiBy = this.getUser().userId;\n                    newBody.modiDate = Utility.getCurrentDateTime();\n                    newBody.delStatus = \"N\";\n                    break;\n\n            case (method == \"DELETE\"):\n                newBody.delBy = this.getUser().userId;\n                    newBody.delDate = Utility.getCurrentDateTime();\n                    newBody.delStatus = \"Y\";\n                    break;\n                \n        }\n        // const apiReq = request.clone({\n        //     url: newReqUrl,\n        //     headers: request.headers.set('Authorization', this.getUser().token),\n        //     body: newBody\n        // });\n        //newBody.insBy =1;\n        request=request.clone({url:newReqUrl});\n        request=request.clone({body:newBody});\n        //request=request.clone({headers:request.headers.set('Authorization', this.getUser().token});\n        console.log(request);\n        return next.handle(request);\n\n\n\n\n        // wrap in delayed observable to simulate server api call\n        // return of(null)\n        //     .pipe(mergeMap(handleRoute))\n        //     .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n        //     .pipe(delay(500))\n        //     .pipe(dematerialize());\n\n        // function handleRoute() {\n        //     switch (true) {\n        //         case url.endsWith('/users/authenticate') && method === 'POST':\n        //             return authenticate();\n        //         case url.endsWith('/users/register') && method === 'POST':\n        //             return register();\n        //         case url.endsWith('/users') && method === 'GET':\n        //             return getUsers();\n        //         case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n        //             return deleteUser();\n        //         default:\n        //             // pass through any requests not handled above\n        //             return next.handle(request);\n        //     }\n        // }\n\n        // // route functions\n\n        // function authenticate() {\n        //     const { username, password } = body;\n        //     const user = users.find(x => x.username === username && x.password === password);\n        //     if (!user) return error('Username or password is incorrect');\n        //     return ok({\n        //         id: user.id,\n        //         username: user.username,\n        //         firstName: user.firstName,\n        //         lastName: user.lastName,\n        //         token: 'fake-jwt-token'\n        //     })\n        // }\n\n        // function register() {\n        //     const user = body\n\n        //     if (users.find(x => x.username === user.username)) {\n        //         return error('Username \"' + user.username + '\" is already taken')\n        //     }\n\n        //     user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        //     users.push(user);\n        //     localStorage.setItem('users', JSON.stringify(users));\n\n        //     return ok();\n        // }\n\n        // function getUsers() {\n        //     if (!isLoggedIn()) return unauthorized();\n        //     return ok(users);\n        // }\n\n        // function deleteUser() {\n        //     if (!isLoggedIn()) return unauthorized();\n\n        //     users = users.filter(x => x.id !== idFromUrl());\n        //     localStorage.setItem('users', JSON.stringify(users));\n        //     return ok();\n        // }\n\n        // // helper functions\n\n        // function ok(body?) {\n        //     return of(new HttpResponse({ status: 200, body }))\n        // }\n\n        // function error(message) {\n        //     return throwError({ error: { message } });\n        // }\n\n        // function unauthorized() {\n        //     return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        // }\n\n        // function isLoggedIn() {\n        //     return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        // }\n\n        // function idFromUrl() {\n        //     const urlParts = url.split('/');\n        //     return parseInt(urlParts[urlParts.length - 1]);\n        // }\n\n    }\n    getUser(): User {\n        let user: User = JSON.parse(localStorage.currentUser);\n        return user;\n    }\n\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../Services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthenticationService){}\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        \n        let currentUser=this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            req = req.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(req);\n    }\n}\n","export class Utility {\r\n\r\n    static getCurrentDateTime() {\r\n        let today = new Date();\r\n        let hoursDiff = today.getHours() - today.getTimezoneOffset() / 60;\r\n        let minutesDiff = (today.getHours() - today.getTimezoneOffset()) % 60;\r\n        today.setHours(hoursDiff);\r\n        today.setMinutes(minutesDiff);\r\n        return JSON.parse(JSON.stringify(today));\r\n    };\r\n\r\n    static convertDateToJsonDate(date: Date) {\r\n        let hoursDiff = date.getHours() - date.getTimezoneOffset() / 60;\r\n        let minutesDiff = (date.getHours() - date.getTimezoneOffset()) % 60;\r\n        date.setHours(hoursDiff);\r\n        date.setMinutes(minutesDiff);\r\n        return JSON.parse(JSON.stringify(date));\r\n    }\r\n\r\n    static convertJsonDateToNgbDate(dt: Date) {\r\n        let date = new Date(dt);\r\n        console.log(dt);\r\n        let ngbDateStruct = { day: date.getUTCDate() + 1, month: date.getUTCMonth() + 1, year: date.getUTCFullYear() };\r\n        return ngbDateStruct;\r\n    }\r\n\r\n    static convertNgbDateToJsonDate(dt: any) {\r\n        let date = new Date(dt.year, dt.month - 1, dt.day);\r\n        return this.convertDateToJsonDate(date);\r\n    }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseApiUrl:\"http://localhost:81/api\"\n // baseApiUrl:\"http://localhost:50415/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}