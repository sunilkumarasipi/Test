{"version":3,"sources":["./src/app/Models/base.ts","./src/app/Models/school.ts","./src/app/Services/school.service.ts","./src/app/Services/student.service.ts","./src/app/helpers/common-paging/common-paging.component.ts","./src/app/helpers/common-paging/common-paging.component.html","./src/app/helpers/date-picker/datepicker-popup.ts","./src/app/helpers/date-picker/datepicker-popup.html","./src/app/home/Components/alert/alert.component.ts","./src/app/home/Components/alert/alert.component.html","./src/app/home/Components/school/school.component.ts","./src/app/home/Components/school/school.component.html","./src/app/home/Components/student/student-manage.component.ts","./src/app/home/Components/student/student-manage.component.html","./src/app/home/Components/student/student.component.ts","./src/app/home/Components/student/student.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["export class Base {\r\n    insBy: number;\r\n    insDate: Date;\r\n    modiBy: number;\r\n    modiDate: Date;\r\n    delBy: number;\r\n    delDate: Date;\r\n    delStatus:string;\r\n}","import { Base } from './base';\n\nexport class School extends Base {\n    schoolId: number;\n    name: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { School } from \"../Models/school\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchoolService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<School[]>(`/school`);\n  }\n\n  getById(id: number) {\n    return this.http.get<School>(`/school/${id}`);\n  }\n\n  submit(school: School) {\n    return this.http.post<School>(`/school`, school);\n  }\n\n  update(school: School,id: number) {\n    return this.http.put<School>(`/school/${id}`, school);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`/school`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Student } from \"../Models/student\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<Student[]>(`/student`);\n  }\n\n  getById(id: number) {\n    return this.http.get<Student>(`/student/${id}`);\n  }\n\n  submit(student: Student) {\n    return this.http.post(`/student`, student);\n  }\n\n  update(student: Student,id: number) {\n    return this.http.put(`/student/${id}`, student);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`/student/${id}`);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-common-paging',\n  templateUrl: './common-paging.component.html',\n  styleUrls: ['./common-paging.component.css']\n})\nexport class CommonPagingComponent implements OnInit, OnChanges {\n\n  @Input() totalRecords: number = 0;\n  @Input() recordsPerPage: number = 0;\n  @Output() onPageChange: EventEmitter<number> = new EventEmitter();\n  pages: number[] = [];\n  activePage: number;\n\n\n  constructor() { } \n\n  ngOnChanges(changes: SimpleChanges): void {\n    const pageCount = this.getPageCount();\n    this.pages = this.getArrayOfPage(pageCount);\n    this.activePage = 1;\n    this.onPageChange.emit(1);\n  }\n\n  private getPageCount(): number {\n    let totalPage: number = 0;\n\n    if (this.totalRecords > 0 && this.recordsPerPage > 0) {\n      const pageCount = this.totalRecords / this.recordsPerPage;\n      const totalPage = Math.ceil(pageCount);\n      //totalPage = roundedPageCount < pageCount ? roundedPageCount + 1 : roundedPageCount;\n    }\n    return totalPage;\n  }\n\n  private getArrayOfPage(pageCount : number) : number [] {  \n    let pageArray : number [] = [];  \n\n    if(pageCount > 0){  \n        for(var i=1 ; i<= pageCount ; i++){  \n          pageArray.push(i);  \n        }  \n    }  \n\n    return pageArray;  \n  }  \n\n  onClickPage(pageNumber: number) {\n    this.activePage = pageNumber;\n    this.onPageChange.emit(this.activePage);\n  }\n\n  ngOnInit(): void {\n  }\n\n} \n","<ul class=\"pagination pagination justify-content-end\" style=\"margin:20px 0\">\n    <li class=\"page-item\" *ngIf=\"activePage > 1\">\n        <a class=\"page-link\" (click)=\"onPageClick(activePage - 1)\">Previous</a>\n    </li>\n    <li *ngFor=\"let item of pages\" class=\"page-item\" [ngClass]=\"{'active':(item == activePage)}\">\n        <a class=\"page-link\" (click)=\"onPageClick(item)\">{{ page }}</a>\n    </li>\n    <li class=\"page-item\" *ngIf=\"activePage > pages.length\"> \n        <a class=\"page-link\" (click)=\"onPageClick(activePage + 1)\">Next</a>\n    </li>\n</ul>\n","import {Component} from '@angular/core';\r\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'ngbd-datepicker-popup',\r\n  templateUrl: './datepicker-popup.html'\r\n})\r\nexport class NgbdDatepickerPopup {\r\n  model: NgbDateStruct;\r\n}","<!-- <form class=\"form-inline\">\r\n    <div class=\"form-group\">-->\r\n      <div class=\"input-group\"> \r\n        <input class=\"form-control\" placeholder=\"dd/mm/yyyy\"\r\n               name=\"dp\" [(ngModel)]=\"model\" ngbDatepicker #d=\"ngbDatepicker\">\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n        </div>\r\n       </div>\r\n    <!--</div>\r\n  </form> -->\r\n  \r\n  <!-- <hr/>\r\n  <pre>Model: {{ model | json }}</pre> -->\r\n  \r\n  <!-- <ngb-alert class=\"mt-3 mb-0\" type=\"info\" [dismissible]=\"false\">\r\n    You must provide the icon for the button. This allows you\r\n    to choose an icon that matches your application's style.\r\n    In this example, the icon is set via a CSS class.\r\n  </ngb-alert> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>alert works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { School } from '../../../Models/school';\nimport { NgForm } from '@angular/forms';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { User } from 'src/app/Models/user';\nimport { SchoolService } from \"../../../Services/school.service\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-school',\n  templateUrl: './school.component.html',\n  styleUrls: ['./school.component.css'],\n  providers: [DatePipe]\n})\nexport class SchoolComponent implements OnInit {\n\n  model: School= new School();\n  list: School[]=[];\n  submitted = false;\n  //paging\n  pagingList: School[]=[];\n  pageSize = 4;\n  pageNumber = 1;\n  pageCntArr: number[];\n  pageCnt = 0;\n\n  constructor(private datePipe: DatePipe, private schoolService: SchoolService) { }\n\n  ngOnInit(): void {\n    this.getAllSchools();\n  }\n\n  onSubmit(f: NgForm) {\n    this.submitted = true;\n    if (!f.form.valid) {\n      return;\n    }\n\n    if (this.model.schoolId === undefined || this.model.schoolId == null || this.model.schoolId === 0) {\n      this.schoolService.submit(this.model)\n        .pipe(first())\n        .subscribe(\n          data => {\n            // this.model = data;\n            console.log(data);\n            this.getAllSchools();\n          },\n          error => {\n            window.alert(error);\n          }\n        );\n    } else {\n      this.schoolService.update(this.model, this.model.schoolId)\n        .pipe(first())\n        .subscribe(\n          (res:any) => {\n            //this.model = data;\n\n           // console.log(data);\n            this.getAllSchools();\n          },\n          error => {\n            window.alert(error);\n          }\n        );\n    }\n\n  }\n\n  getAllSchools() {\n    this.schoolService.getAll()\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          this.list = data;\n          this.getPages();\n          this.getPaginatedData(1);\n        },\n        error => {\n          console.error(error);\n        });\n  }\n\n  getPaginatedData(pageNumber: number) {\n    this.pageNumber = pageNumber;\n    this.pagingList = this.list.slice((this.pageNumber - 1) * this.pageSize, this.pageNumber * this.pageSize);\n  }\n\n  getPages() {\n    this.pageCnt = Math.ceil(this.list.length / this.pageSize);\n    let i = 0;\n    this.pageCntArr=[];\n    for (i = 0; i < this.pageCnt; i++) {\n      this.pageCntArr.push(i + 1);\n    }\n  }\n\n  onEdit(id: any) {\n    this.schoolService.getById(id)\n      .subscribe(data => {\n        this.model = data;\n      },\n        error => {\n          console.error(error);\n        });\n  }\n\n  getUser(): User {\n    let user: User = JSON.parse(localStorage.currentUser);\n    return user;\n  }\n\n  getCurrentDateTime() {\n    let today = new Date();\n    let currentdate: any = formatDate(today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n    return currentdate;\n  }\n\n}\n","<!-- <div class=\"container\"> -->\n<div class=\"row\">\n    <div class=\"col-sm-5\">\n        <div class=\"card m-3\">\n            <h5 class=\"card-header\">School</h5>\n            <div class=\"card-body\">\n                <form name=\"form\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col\">\n                            <label for=\"name\">School Name</label>\n                            <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"model.name\"\n                                #schoolName=\"ngModel\" [ngClass]=\"{'is-invalid': (f.submitted && schoolName.invalid) }\"\n                                required />\n                            <div *ngIf=\"f.submitted && schoolName.invalid\" class=\"invalid-feedback\">\n                                <div *ngIf=\"schoolName.errors.required\">School Name is required</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary mr-1\">Submit</button>\n                        <button class=\"btn btn-secondary\" type=\"reset\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-7\">\n\n        <div class=\"card m-3\">\n            <h5 class=\"card-header\">Schools:</h5>\n            <div class=\"card-body\">\n                <table class=\"table table-bordered\">\n                    <thead class=\"thead-dark\">\n                        <th>School Name</th>\n                        <th>Created Date</th>\n                        <th>Modified Date</th>\n                        <th>Action</th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let school of pagingList\">\n                            <td>{{school.name}}</td>\n                            <td>{{school.insDate | date:'dd/MM/yyyy h:mm:ss a'}}</td>\n                            <td>{{school.modiDate | date:'dd/MM/yyyy h:mm:ss a'}}</td>\n                            <td>\n                                <a class=\"text-primary\" (click)='onEdit(school.schoolId)'>Edit</a>\n                                &nbsp;<a class=\"text-danger\">Delete</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"card-footer\">\n                <ul class=\"pagination pagination justify-content-end\" style=\"margin:20px 0\">\n                    <li class=\"page-item\" *ngIf=\"pageNumber > 1\">\n                        <a class=\"page-link\" (click)=\"getPaginatedData(pageNumber - 1)\">Previous</a>\n                    </li>\n                    <li *ngFor=\"let page of pageCntArr\" class=\"page-item\" [ngClass]=\"{'active':(page == pageNumber)}\">\n                        <a class=\"page-link\" (click)=\"getPaginatedData(page)\">{{ page }}</a>\n                    </li>\n                    <li class=\"page-item\" *ngIf=\"pageNumber < pageCnt\">\n                        <a class=\"page-link\" (click)=\"getPaginatedData(pageNumber + 1)\">Next</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<!-- </div> -->\n\n\n\n<!-- {{this.model|json}} -->","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from \"../../../Services/student.service\";\nimport { Student } from '../../../Models/student';\nimport { School } from '../../../Models/school';\nimport { Router } from \"@angular/router\";\nimport { SchoolService } from '../../../Services/school.service';\n\n@Component({\n  selector: 'app-student-manage',\n  templateUrl: './student-manage.component.html',\n  styleUrls: ['./student-manage.component.css']\n})\nexport class StudentManageComponent implements OnInit {\n\n  studentList: Student[];\n  schoolList: School[];\n  constructor(public studentService: StudentService\n    , private schoolService: SchoolService\n    , private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadAllStudents();\n  }\n\n  activePage:number = 0;  \n  \n  displayActivePage(activePageNumber:number){  \n    this.activePage = activePageNumber  \n  }\n\n  loadAllStudents() {\n    this.studentService.getAll().subscribe(data => {\n      this.studentList = data;\n      this.loadSchools();\n    },\n      error => {\n        console.error(error);\n      });\n  }\n\n  loadSchools(){\n    this.schoolService.getAll().subscribe(data => {\n      this.schoolList = data;\n      this.studentList.forEach(x => x.schoolName = (this.schoolList.find(y => y.schoolId == x.schoolId).name));\n    },\n      error => {\n        console.error(error);\n      });\n  }\n\n  editStudent(id: any) {\n    console.log(id);\n    this.router.navigate(['home/student', id]);\n  }\n\n  deleteStudent(id: any) {\n    this.router.navigate(['/student-create]']);\n  }\n\n}\n","<div class=\"card m-3\">\n    <h5 class=\"card-header\">All Students:</h5>\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n                <thead class=\"thead-dark\">\n                    <th>Name</th>\n                    <th>Address</th>\n                    <th>Class</th>\n                    <th>DOB</th>\n                    <th>School</th>\n                    <th>Gender</th>\n                    <th>Guardian-Name</th>\n                    <th>Mobile</th>\n                    <th>Email</th>\n                    <th>Fees</th>\n                    <th>Comments</th>\n                    <th>Created Date</th>\n                    <th>Modified Date</th>\n                    <th>Action</th>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let student of studentList\">\n                        <td>{{student.name}}</td>\n                        <td>{{student.address}}</td>\n                        <td>{{student.class}}</td>\n                        <td>{{student.dateOfBirth|date:'dd/MM/yyyy'}}</td>\n                        <td>{{student.schoolName}}</td>\n                        <td [ngSwitch]=\"student.gender\">\n                            <span *ngSwitchCase=\"'M'\">Male</span>\n                            <span *ngSwitchCase=\"'F'\">Female</span>\n                            <span *ngSwitchCase=\"'O'\">Others</span>\n                            <span *ngSwitchDefault>NA</span>\n                        </td>\n                        <td>{{student.guardianName}}</td>\n                        <td>{{student.mobile}}</td>\n                        <td>{{student.email}}</td>\n                        <td>{{student.fees}}</td>\n                        <td>{{student.comments}}</td>\n                        <td>{{student.insDate | date:'dd/MM/yyyy h:mm:ss a'}}</td>\n                        <td>{{student.modiDate | date:'dd/MM/yyyy h:mm:ss a'}}</td>\n                        <td>\n                            <a (click)=\"editStudent(student.studentId)\" class=\"text-primary\">Edit</a>\n                            &nbsp; <a (click)=\"deleteStudent(student.studentId)\" class=\"text-danger\">Delete</a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"card-footer\">\n            <app-common-paging [totalRecords]=\"45\" [recordsPerPage]=\"10\" \n            (onPageChange)=\"displayActivePage($event)\">\n            </app-common-paging>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors, FormArray } from \"@angular/forms\";\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\nimport { SchoolService } from '../../../Services/school.service';\nimport { School } from 'src/app/Models/school';\nimport { StudentService } from \"../../../Services/student.service\";\nimport { first } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Student } from 'src/app/Models/student';\nimport { isNumber } from '@ng-bootstrap/ng-bootstrap/util/util';\nimport { Utility } from \"../../../helpers/utility-functions\";\nimport { IDropdownSettings} from 'ng-multiselect-dropdown';\n\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  previewUrl;\n  studentForm: FormGroup;\n  subjectForm: FormGroup;\n  loading = false;\n  submitted = false;\n  //model: NgbDateStruct;\n  fileData: File = null;\n  schoolList: School[];\n  //utility: Utility;\n\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings:IDropdownSettings = {};\n\n  constructor(private formBuilder: FormBuilder\n    , private schoolService: SchoolService\n    , private studentService: StudentService\n    , private activatedRoute: ActivatedRoute\n    , private router: Router) { }\n\n\n  ngOnInit(): void {\n\n    this.bindSubjects();\n    this.initializeStudentForm();\n    this.getAllSchools();\n    \n    let id = this.activatedRoute.snapshot.paramMap.get(\"id\");\n    //Edit mode\n    // if (id != null) {\n    //   this.getStudentById(id);\n    // }\n  }\n\n  bindSubjects(){\n    this.dropdownList = [\n      { item_id: 1, item_text: 'English' },\n      { item_id: 2, item_text: 'Maths' },\n      { item_id: 3, item_text: 'Telugu' }\n    ];\n    // this.studentForm.value.subst.patchValue([\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 3, item_text: 'Telugu' }\n    // ]);\n\n    this.selectedItems = [\n      { item_id: 1, item_text: 'English' },\n      { item_id: 3, item_text: 'Telugu' }\n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n\n  }\n\n  onItemSelect(item: any) {\n    console.log(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n  initializeStudentForm() {\n    this.studentForm = this.formBuilder.group({\n      studentId: [0],\n      name: [null, [Validators.required, Validators.maxLength(50)]],\n      address: [null, [Validators.required, Validators.maxLength(50)]],\n      class: [null, [Validators.required, Validators.maxLength(5)]],\n      dateOfBirth: [null],\n      dob: [null, Validators.required],\n      gender: [null, Validators.required],\n      schoolId: [null, Validators.required],\n      guardianName: [null, [Validators.required, Validators.maxLength(50)]],\n      mobile: [null, [Validators.required, Validators.maxLength(10), Validators.pattern(/[6-9]\\d{9}/)]],\n      email: [null, [Validators.required, Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/)]],\n      fees: [null, [Validators.required, Validators.pattern(/^(\\d+)?([.]?\\d{0,2})?$/)]],\n      comments: [null],\n      photo: [null],\n      insBy: [null],\n      insDate: [null],\n      modiBy: [null],\n      modiDate: [null],\n      delStatus: ['N'],\n      subst:[ this.selectedItems,[Validators.required]],\n      subjects: this.formBuilder.array([this.formBuilder.group({\n        subjectId: [0],\n        name: ['',Validators.required]\n      })])\n    });\n  }\n\n\n  addSubjects(){\n    this.studentForm.value.subjects.push(this.formBuilder.group({\n      subjectId: [0],\n      name: ['',Validators.required]\n    }))\n  }\n\n  get f() { return this.studentForm.controls; }\n\n  getStudentById(id: any) {\n    this.studentService.getById(id)\n      .subscribe(\n        data => {\n          this.setStudent(data)\n        },\n        error => {\n          console.error(error);\n        }\n      )\n  }\n\n  setStudent(student: Student) {\n    this.studentForm.setValue({\n      studentId: student.studentId,\n      name: student.name,\n      address: student.address,\n      class: student.class,\n      dateOfBirth: student.dateOfBirth,\n      dob: Utility.convertJsonDateToNgbDate(student.dateOfBirth),\n      gender: student.gender,\n      schoolId: student.schoolId,\n      guardianName: student.guardianName,\n      mobile: student.mobile,\n      email: student.email,\n      fees: student.fees,\n      comments: student.comments,\n      photo: student.photo,\n      insBy: student.insBy,\n      insDate: student.insDate,\n      modiBy: student.modiBy,\n      modiDate: student.modiDate,\n      delStatus: student.delStatus\n    });\n  }\n\n  getAllSchools() {\n    this.schoolService.getAll().subscribe(\n      data => {\n        this.schoolList = data;\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  fileProgress(fileInput: any) {\n\n    this.fileData = <File>fileInput.target.files[0];\n    console.log(this.fileData);\n    var mimeType = this.fileData.type;\n    if (mimeType.match(/image\\/*/) == null) {\n      return;\n    }\n\n    var reader = new FileReader();\n    reader.readAsDataURL(this.fileData);\n    reader.onload = (_event) => {\n      this.previewUrl = reader.result;\n      this.f.photo.patchValue(reader.result);\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.studentForm.invalid) {\n      return;\n    }\n\n\n    this.f.dateOfBirth.setValue(Utility.convertNgbDateToJsonDate(this.f.dob.value));\n\n    this.f.schoolId.setValue(parseInt(this.f.schoolId.value));\n    this.f.fees.setValue(parseFloat(this.f.fees.value));\n    this.loading = true;\n\n    if (this.f.studentId.value == 0) {\n      this.studentService.submit(this.studentForm.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.loading = false;\n            this.router.navigate(['home/student']);\n          },\n          error => {\n            window.alert(error);\n            console.error(error);\n            this.loading = false;\n          },\n        );\n    }\n    else {\n\n      this.studentService.update(this.studentForm.value, this.f.studentId.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.loading = false;\n            this.router.navigate(['home/student']);\n          },\n          error => {\n            window.alert(\"error\");\n            this.loading = false;\n          },\n        );\n\n    }\n  }\n\n\n}\n\n// function ValidateFees(control: AbstractControl) : {[key: string]: any} | null {\n//   let fees = control.value;\n//   if (!isNumber(fees)) {\n//     return { 'isNumber': false };\n//   }\n//   return null;\n// }","<div class=\"row\">\n    <div class=\"card m-3\" style=\"width: 100%;\">\n        <h5 class=\"card-header\">Student</h5>\n        <div class=\"card-body\">\n            <form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        \n                        <div class=\"col-sm-7\">\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-7\">\n                                        <label for=\"name\">Name</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                                            [ngClass]=\"{ 'is-invalid': (submitted||f.name.touched) && f.name.errors }\" />\n                                        <div *ngIf=\"(submitted||f.name.touched) && f.name.errors\"\n                                            class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-3\">\n                                        <label for=\"class\">Class</label>\n                                        <input type=\"text\" formControlName=\"class\" class=\"form-control\"\n                                            [ngClass]=\"{'is-invalid': (submitted||f.class.touched) && f.class.errors}\" />\n                                        <div *ngIf=\"(submitted||f.class.touched) && f.class.errors\"\n                                            class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.class.errors.required\">Class is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-10\">\n                                        <label for=\"address\">Address</label>\n                                        <textarea type=\"text\" formControlName=\"address\" class=\"form-control\"\n                                            [ngClass]=\"{ 'is-invalid': (submitted||f.address.touched) && f.address.errors }\"></textarea>\n                                        <div *ngIf=\"(submitted||f.address.touched) && f.address.errors\"\n                                            class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.address.errors.required\">Address is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <div class=\"image-preview mb-3\">\n                                <img [src]=\"f.photo.value\" height=\"150\" width=\"150\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <label for=\"dateOfBirth\">DOB</label>\n                            <!-- <input type=\"text\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                formControlName=\"dateOfBirth\"  \n                                [ngClass]=\"{ 'is-invalid': (submitted||f.dateOfBirth.touched) && f.dateOfBirth.errors }\" /> -->\n\n                            <!-- <ngbd-datepicker-popup></ngbd-datepicker-popup> -->\n\n                            <div class=\"input-group\">\n                                <input class=\"form-control\" placeholder=\"dd/mm/yyyy\" formControlName=\"dob\"\n                                    name=\"dp\" ngbDatepicker #d=\"ngbDatepicker\" [minDate]=\"{year: 1990, month: 1, day: 1}\"\n                                    [ngClass]=\"{ 'is-invalid': (submitted||f.dob.touched) && f.dob.errors }\" />\n                                <div class=\"input-group-append\">\n                                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\"\n                                        type=\"button\"></button>\n                                </div>\n                                <div *ngIf=\"(submitted||f.dob.touched) && f.dob.errors\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"f.dob.errors.required\">DOB is required</div>\n                            </div>\n                            </div>\n                            <!-- {{f.dateOfBirth.errors|json }} {{f.dateOfBirth.touched|json}} -->\n                            <!-- </div> -->\n                            \n                        </div>\n                        <div class=\"col-sm-5\">\n                            <label for=\"schoolId\">School</label>\n                            <select class=\"form-control\" formControlName=\"schoolId\"\n                                [ngClass]=\"{'is-invalid': (submitted||f.schoolId.touched) && f.schoolId.errors}\">\n                                <option value=\"null\">--Select--</option>\n                                <option *ngFor=\"let school of schoolList\" [value]=\"school.schoolId\">{{school.name}}\n                                </option>\n                            </select>\n                            <div *ngIf=\"(submitted||f.schoolId.touched) && f.schoolId.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.schoolId.errors.required\">School is required</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <label for=\"schoolId\">Gender</label>\n                            <div class=\"form-control\"\n                                [ngClass]=\"{ 'is-invalid': (submitted||f.gender.touched) && f.gender.errors }\">\n                                <div class=\"form-check-inline\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input\" value=\"M\" name=\"gender\"\n                                            formControlName=\"gender\">Male\n                                    </label>\n                                </div>\n                                <div class=\"form-check-inline\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input\" value=\"F\" name=\"gender\"\n                                            formControlName=\"gender\">Female\n                                    </label>\n                                </div>\n                                <div class=\"form-check-inline\">\n                                    <label class=\"form-check-label\">\n                                        <input type=\"radio\" class=\"form-check-input\" value=\"O\" name=\"gender\"\n                                            formControlName=\"gender\">Others\n                                    </label>\n                                </div>\n                            </div>\n                            <div *ngIf=\"(submitted||f.gender.touched) && f.gender.errors\" name=\"gender\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"f.gender.errors.required\">Gender is required</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <label for=\"guardianName\">Guardian-Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"guardianName\"\n                                [ngClass]=\"{ 'is-invalid': (submitted||f.guardianName.touched) && f.guardianName.errors }\" />\n                            <div *ngIf=\"(submitted||f.guardianName.touched) && f.guardianName.errors\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"f.guardianName.errors.required\">Guardian-Name is required</div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <label for=\"fees\">Fees</label>\n                            <input type=\"text\" formControlName=\"fees\" class=\"form-control\"\n                                [ngClass]=\"{'is-invalid': (submitted||f.fees.touched) && f.fees.errors}\" />\n                            <div *ngIf=\"(submitted||f.fees.touched) && f.fees.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.fees.errors.required\">Fees is required</div>\n                                <div *ngIf=\"f.fees.errors.pattern\">Only two decimal places allowed</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <label for=\"mobile\">Mobile</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"mobile\"\n                                [ngClass]=\"{ 'is-invalid': (submitted||f.mobile.touched) && f.mobile.errors }\" />\n                            <div *ngIf=\"(submitted||f.mobile.touched) && f.mobile.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.mobile.errors.required\">Mobile number is required</div>\n                                <div *ngIf=\"f.mobile.errors.pattern || f.mobile.errors.maxlength\">Invalid mobile (should\n                                    consist\n                                    of 10 digits)</div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-5\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                                [ngClass]=\"{'is-invalid': (submitted||f.email.touched) && f.email.errors}\" />\n                            <div *ngIf=\"(submitted||f.email.touched) && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.pattern\">Invalid Email</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <input type=\"file\" (change)=\"fileProgress($event)\">\n                        </div>\n                    </div>\n                </div> -->\n\n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <label for=\"email\">Subjects</label>\n                            <div [ngClass]=\"{'is-invalid': (submitted||f.subst.touched) && f.subst.errors}\">\n                                <ng-multiselect-dropdown \n                                    [placeholder]=\"'--Select subject--'\" [settings]=\"dropdownSettings\" formControlName=\"subst\" [data]=\"dropdownList\"\n                                    (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                            <div *ngIf=\"(submitted||f.subst.touched) && f.subst.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.subst.errors.required\">Subjects is required</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"photo\">Upload Photo</label>\n                    <input type=\"file\" id=\"photo\" class=\"form-control-file\" (change)=\"fileProgress($event)\">\n                </div>\n\n\n                <!-- <div formArrayName=\"subjects\">\n                    <div *ngFor=\"let subject of subjects; let i = index;\">\n                      <div [formGroupName]=\"i\">\n                        \n                        <input \n                          type=\"text\" \n                          name=\"currency\"\n                          formControlName=\"subjectName\">\n                      </div>\n                    </div>\n                  </div> -->\n                 \n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-7\">\n                            <label for=\"comments\">Comments</label>\n                            <textarea type=\"text\" formControlName=\"comments\" class=\"form-control\"></textarea>\n                        </div>\n                    </div>\n                </div>\n\n               \n\n                <div class=\"form-group\">\n                    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Submit\n                    </button>\n                    &nbsp;<button class=\"btn btn-primary\" *ngIf=\"this.f.studentId.value==0\" >\n                        Reset\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n\n</div>\n<!-- {{studentForm.controls}} -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { StudentComponent } from './Components/student/student.component';\nimport { SchoolComponent } from './Components/school/school.component';\nimport { StudentManageComponent } from './Components/student/student-manage.component';\nimport { NgbdDatepickerPopup } from '../helpers/date-picker/datepicker-popup';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'student-create', component: StudentComponent },\n  { path: 'student/:id', component: StudentComponent },\n  { path: 'school', component: SchoolComponent },\n  { path: 'user', component: SchoolComponent },\n  { path: 'dp', component: NgbdDatepickerPopup },\n  { path: 'student', component: StudentManageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { UserService } from '../Services/user.service';\nimport { Subscription } from 'rxjs';\nimport { User } from '../Models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  currentUser: User;\n  currentUserSubscription: Subscription;\n  users: User[] = [];\n\n  constructor(\n      private authenticationService: AuthenticationService,\n      private userService: UserService,\n      private router: Router\n  ) {\n      this.currentUserSubscription = this.authenticationService.currentUser.subscribe(user => {\n          this.currentUser = user;\n      });\n  }\n\n  ngOnInit() {\n      this.loadAllUsers();\n  }\n\n  ngOnDestroy() {\n      // unsubscribe to ensure no memory leaks\n      this.currentUserSubscription.unsubscribe();\n  }\n\n  deleteUser(id: number) {\n      if (confirm(\"Are you sure you want to delete?\")) {\n          this.userService.delete(id).pipe(first()).subscribe(() => {\n              this.loadAllUsers()\n          });\n      }\n  }\n  editUser(id: number) {\n    this.router.navigate(['/register']);\n}\n\n  private loadAllUsers() {\n      this.userService.getAll().pipe(first()).subscribe(users => {\n          this.users = users;\n      });\n  }\n}","<div class=\"card m-3\">\n    <h5 class=\"card-header\">All registered users:</h5>\n    <div class=\"card-body\">\n        <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n                <th>Name</th>\n                <th>UserName</th>\n                <th>Password</th>\n                <th>Action</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users\">\n                    <td>{{user.fullName}}</td>\n                    <td>{{user.userName}}</td>\n                    <td>{{user.password}}</td>\n                    <td>\n                        <a (click)=\"deleteUser(user.userId)\" class=\"text-danger\">Delete</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { StudentComponent } from './Components/student/student.component';\nimport { AlertComponent } from './Components/alert/alert.component';\nimport { SchoolComponent } from './Components/school/school.component';\nimport { FormsModule,ReactiveFormsModule }   from '@angular/forms';\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbdDatepickerPopup } from '../helpers/date-picker/datepicker-popup';\nimport { StudentManageComponent } from './Components/student/student-manage.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { CommonPagingComponent } from \"../helpers/common-paging/common-paging.component\";\n\n@NgModule({\n  declarations: [HomeComponent,CommonPagingComponent, StudentComponent, AlertComponent, SchoolComponent,NgbdDatepickerPopup, StudentManageComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot()\n  ]\n})\nexport class HomeModule { }\n"],"sourceRoot":"webpack:///"}