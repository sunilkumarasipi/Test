{"version":3,"sources":["./src/app/Models/base.ts","./src/app/Models/school.ts","./src/app/Services/school.service.ts","./src/app/home/Components/alert/alert.component.ts","./src/app/home/Components/alert/alert.component.html","./src/app/home/Components/school/school.component.ts","./src/app/home/Components/school/school.component.html","./src/app/home/Components/student/student.component.ts","./src/app/home/Components/student/student.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["export class Base {\r\n    insBy: number;\r\n    insDate: Date;\r\n    modiBy: number;\r\n    modiDate: Date;\r\n    delBy: number;\r\n    delDate: Date;\r\n    delStatus:string;\r\n}","import { Base } from './base';\n\nexport class School extends Base {\n    schoolId: number;\n    name: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { School } from \"../Models/school\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchoolService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<School[]>(`/school`);\n  }\n\n  getById(id: number) {\n    return this.http.get<School>(`/school/${id}`);\n  }\n\n  submit(school: School) {\n    return this.http.post<School>(`/school`, school);\n  }\n\n  update(school: School,id: number) {\n    return this.http.put<School>(`/school/${id}`, school);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`/school`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>alert works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { School } from '../../../Models/school';\nimport { NgForm } from '@angular/forms';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { User } from 'src/app/Models/user';\nimport { SchoolService } from \"../../../Services/school.service\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-school',\n  templateUrl: './school.component.html',\n  styleUrls: ['./school.component.css'],\n  providers: [DatePipe]\n})\nexport class SchoolComponent implements OnInit {\n\n  model: School;\n  list: School[];\n  submitted = false;\n  constructor(private datePipe: DatePipe, private schoolService: SchoolService) { }\n\n  ngOnInit(): void {\n    this.model = new School();\n    // let objSchool = new School();\n    // let objSchool1 = new School();\n    // objSchool.schoolId = 1;\n    // objSchool.name = \"School1\";\n    // objSchool1.schoolId = 2;\n    // objSchool1.name = \"School2\";\n    this.list = [];\n    this.getAllSchools();\n    // this.list.push(objSchool);\n    // this.list.push(objSchool1);\n  }\n\n  onSubmit(f: NgForm) {\n    this.submitted = true;\n    if (!f.form.valid) {\n      return;\n    }\n    debugger;\n\n    if (this.model.schoolId === undefined || this.model.schoolId == null || this.model.schoolId === 0) {\n      this.schoolService.submit(this.model)\n        .pipe(first())\n        .subscribe(\n          data => {\n           // this.model = data;\n            console.log(data);\n            this.getAllSchools();\n          },\n          error => {\n            window.alert(error);\n          }\n        );\n    } else {\n      this.schoolService.update(this.model,this.model.schoolId)\n        .pipe(first())\n        .subscribe(\n          data => {\n            //this.model = data;\n            console.log(data);\n            this.getAllSchools();\n          },\n          error => {\n            window.alert(error);\n          }\n        );\n    }\n\n    //this.getAllSchools();\n    // console.log(f.form.value);\n\n    //user.insDate=this.datePipe.transform(user.insDate, 'yyyy-MM-dd');\n    // if (this.model.schoolId === undefined || this.model.schoolId == null || this.model.schoolId === 0) {\n    //   this.model.insBy = this.getUser().id;\n    //   this.model.insDate = this.getCurrentDateTime();\n    //   this.list.push(this.model);\n    // }\n    // else {\n    //   this.model.modiBy = this.getUser().id;\n    //   this.model.modiDate = this.getCurrentDateTime();\n    //   this.list.find(x => x.schoolId == this.model.schoolId).name = this.model.name;\n    //   this.list.find(x => x.schoolId == this.model.schoolId).modiBy = this.model.modiBy;\n    //   this.list.find(x => x.schoolId == this.model.schoolId).modiDate = this.model.modiDate;\n    // }\n    // console.log(this.model);\n    //window.alert(f.form.value);\n  }\n\n  getAllSchools() {\n    this.schoolService.getAll()\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          this.list = data;\n        },\n        error => {\n          console.error(error);\n        });\n  }\n\n  onEdit(id: any) {\n\n    this.schoolService.getById(id)\n    .subscribe(data => {\n      this.model = data;\n    },\n    error => {\n      console.error(error);\n    });\n\n    //let school:any = this.list.find(x => x.schoolId == id);\n    //this.model=school;\n  }\n\n  getUser(): User {\n    let user: User = JSON.parse(localStorage.currentUser);\n    return user;\n  }\n\n  getCurrentDateTime() {\n    let today = new Date();\n    let currentdate: any = formatDate(today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n    return currentdate;\n  }\n\n}\n","<!-- <div class=\"container\"> -->\n    <div class=\"row\">\n        <div class=\"col-sm-5\">\n            <div class=\"card m-3\">\n                <h5 class=\"card-header\">School</h5>\n                <div class=\"card-body\">\n                    <form name=\"form\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n                                <label for=\"name\">School Name</label>\n                                <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"model.name\"\n                                    #schoolName=\"ngModel\"\n                                    [ngClass]=\"{'is-invalid': (f.submitted && schoolName.invalid) }\" required />\n                                <div *ngIf=\"f.submitted && schoolName.invalid\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"schoolName.errors.required\">School Name is required</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <button class=\"btn btn-primary mr-1\">Submit</button>\n                            <button class=\"btn btn-secondary\" type=\"reset\">Cancel</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-7\">\n\n            <div class=\"card m-3\">\n                <h5 class=\"card-header\">Schools:</h5>\n                <div class=\"card-body\">\n                    <table class=\"table table-bordered\">\n                        <thead class=\"thead-dark\">\n                            <th>School-Name</th>\n                            <th>Action</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let school of list\">\n                                <td>{{school.name}}</td>\n                                <td>\n                                    <a class=\"text-danger\" (click)='onEdit(school.schoolId)'>Edit</a>\n                                    &nbsp;<a class=\"text-danger\">Delete</a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n<!-- </div> -->\n\n\n\n{{this.model|json}}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>student works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { StudentComponent } from './Components/student/student.component';\nimport { SchoolComponent } from './Components/school/school.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'student', component: StudentComponent },\n  { path: 'school', component: SchoolComponent },\n  { path: 'user', component: SchoolComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { UserService } from '../Services/user.service';\nimport { Subscription } from 'rxjs';\nimport { User } from '../Models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  currentUser: User;\n  currentUserSubscription: Subscription;\n  users: User[] = [];\n\n  constructor(\n      private authenticationService: AuthenticationService,\n      private userService: UserService,\n      private router: Router\n  ) {\n      this.currentUserSubscription = this.authenticationService.currentUser.subscribe(user => {\n          this.currentUser = user;\n      });\n  }\n\n  ngOnInit() {\n      this.loadAllUsers();\n  }\n\n  ngOnDestroy() {\n      // unsubscribe to ensure no memory leaks\n      this.currentUserSubscription.unsubscribe();\n  }\n\n  deleteUser(id: number) {\n      if (confirm(\"Are you sure you want to delete?\")) {\n          this.userService.delete(id).pipe(first()).subscribe(() => {\n              this.loadAllUsers()\n          });\n      }\n  }\n  editUser(id: number) {\n    this.router.navigate(['/register']);\n}\n\n  private loadAllUsers() {\n      this.userService.getAll().pipe(first()).subscribe(users => {\n          this.users = users;\n      });\n  }\n}","<!-- <h1>Hi {{currentUser.firstName}}!</h1> -->\n<!-- <p>You're logged in with Angular 8!!</p> -->\n<!-- <h3>All registered users:</h3> -->\n<!-- <ul>\n    <li *ngFor=\"let user of users\">\n        {{user.username}} ({{user.firstName}} {{user.lastName}})\n        - <a (click)=\"deleteUser(user.id)\" class=\"text-danger\">Delete</a>\n    </li>\n</ul> -->\n<div class=\"card m-3\">\n    <h5 class=\"card-header\">All registered users:</h5>\n    <div class=\"card-body\">\n        <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n                <th>Name</th>\n                <th>UserName</th>\n                <th>Password</th>\n                <th>Action</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let user of users\">\n                    <td>{{user.fullName}}</td>\n                    <td>{{user.userName}}</td>\n                    <td>{{user.password}}</td>\n                    <td>\n                        <a (click)=\"deleteUser(user.userId)\" class=\"text-danger\">Delete</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { StudentComponent } from './Components/student/student.component';\nimport { AlertComponent } from './Components/alert/alert.component';\nimport { SchoolComponent } from './Components/school/school.component';\nimport { FormsModule }   from '@angular/forms';\n\n\n@NgModule({\n  declarations: [HomeComponent, StudentComponent, AlertComponent, SchoolComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    FormsModule\n  ]\n})\nexport class HomeModule { }\n"],"sourceRoot":"webpack:///"}